{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","docIndex","setDocIndex","input","setInput","results","setResults","searchWords","setSearchWords","showDocument","setShowDocument","selectedDocId","setSelectedDocId","selectedDoc","setSelectedDoc","SERVER_URL","camelize","str","result","replace","charAt","toUpperCase","slice","useEffect","fetch","then","res","json","res_json","console","log","catch","err","className","type","value","id","onKeyDown","event","key","search_words","onChange","e","target","autoFocus","style","color","htmlFor","length","map","i","href","doc_id","onClick","preventDefault","doc_snippet","textToHighlight","doc_name","textAlign","doc","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25ad2bd4.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Highlighter from 'react-highlight-words';\n\nfunction App() {\n\n  const [docIndex, setDocIndex] = useState({});\n\n  const [input, setInput] = useState();\n\n  const [results, setResults] = useState([]);\n  const [searchWords, setSearchWords] = useState([]);\n\n  const [showDocument, setShowDocument] = useState(false);\n\n  const [selectedDocId, setSelectedDocId] = useState();\n  const [selectedDoc, setSelectedDoc] = useState({});\n\n  //const SERVER_URL = 'http://localhost:5000/';\n  const SERVER_URL = 'http://34.228.23.67:5000/';\n\n  useEffect(() => {\n    fetch(`${SERVER_URL}/doc_index`)\n    .then(res => res.json())\n    .then(res_json => {\n      console.log(res_json)\n      setDocIndex(res_json);\n    });\n  }, []);\n\n  function camelize(str) {\n    if(str) {\n      let result = str.replace( /([A-Z])/g, \"$1\" );\n      let finalResult = result.charAt(0).toUpperCase() + result.slice(1);\n      return finalResult;\n    }\n  }\n\n  function handleKeyDown(event) {\n    if (event.key === 'Enter') {\n      if(input) {\n        fetch(`${SERVER_URL}/query?query=`+input)\n        .then(res => res.json())\n        .then(res_json => {\n          setResults(res_json.results);\n          setSearchWords(res_json.search_words);\n        })\n        .catch(err => {\n          console.log(err);\n        })\n      } else {\n        setResults([]);\n        setSearchWords([]);\n        setShowDocument(false);\n        setSelectedDocId();\n        setSelectedDoc({});\n      }\n    }\n  }\n\n  useEffect(() => {\n    if(selectedDocId) {\n      fetch(`${SERVER_URL}/document?doc_id=`+selectedDocId)\n      .then(res => res.json())\n      .then(res_json => {\n        setSelectedDoc(res_json);\n      })\n      .catch(err => {\n        console.log(err);\n      })\n    }\n  }, [selectedDocId]);\n\n  function renderResults() {\n    if(results.length > 0) {\n      return results.map((result, i) => {\n        return (\n          <div className=\"result mb-4\">\n            <p className=\"lead text-white\" href=\"#\">\n              {result.doc_id}.\n              <a\n                href=\"#\" \n                className=\"text-white\" \n                onClick={(e) => {\n                  e.preventDefault()\n                  setShowDocument(true);\n                  setSelectedDocId(result.doc_id);\n                }}>\n                  {camelize(docIndex[result.doc_id])}\n              </a>\n            </p>\n            {result.doc_snippet && (\n              <span className=\"snippet text-white\">\n                <Highlighter\n                  searchWords={searchWords}\n                  textToHighlight={`...${result.doc_snippet}...`}\n                />\n              </span>\n            )}\n          </div>\n        );\n      })\n    } else {\n      return <p className=\"text-white\">No results.</p>\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h6 className=\"text-muted\">M. Areeb Siddiqui - k181062</h6>\n        <h1 className=\"display-4\">\n          Short Stories\n        </h1>\n        {!showDocument && (\n          <div className=\"col-lg-8 content\">\n            <div className=\"form-floating mb-3\">\n              <input type=\"text\" className=\"form-control\" value={input} id=\"floatingInput\" onKeyDown={handleKeyDown} onChange={e => setInput(e.target.value)} autoFocus />\n              <label style={{color: \"#282c34\"}} htmlFor=\"floatingInput\">query + enter</label>\n            </div>\n            <hr/>\n            {renderResults()}\n          </div>\n        )}\n        {showDocument && selectedDoc.doc_name && (\n          <>\n            <a className=\"text-white\" href=\"#\" onClick={(e) => {\n              e.preventDefault();\n              setShowDocument(false);\n            }}>Back</a>\n            <h3>\n              {selectedDoc.doc_name}  \n            </h3>\n            <div className=\"col-lg-10 content\">\n              <p style={{textAlign: \"justify\"}}>\n              <Highlighter\n                  searchWords={searchWords}\n                  textToHighlight={selectedDoc.doc}\n                />\n              </p>\n            </div>\n          </>\n        )}\n        {showDocument && !selectedDoc.doc_name && (\n          <p>Loading..</p>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}