{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","input","setInput","results","setResults","searchWords","setSearchWords","showDocument","setShowDocument","selectedDocId","setSelectedDocId","selectedDoc","setSelectedDoc","camelize","str","result","replace","charAt","toUpperCase","slice","useEffect","fetch","then","res","json","res_json","console","log","catch","err","className","class","type","value","id","onKeyDown","event","key","search_words","onChange","e","target","autoFocus","style","color","htmlFor","length","map","i","href","doc_id","onClick","preventDefault","doc_name","doc_snippet","textToHighlight","textAlign","doc","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAmIeA,MA/Hf,WAAgB,IAAD,EAEaC,qBAFb,mBAENC,EAFM,KAECC,EAFD,OAIiBF,mBAAS,IAJ1B,mBAING,EAJM,KAIGC,EAJH,OAKyBJ,mBAAS,IALlC,mBAKNK,EALM,KAKOC,EALP,OAO2BN,oBAAS,GAPpC,mBAONO,EAPM,KAOQC,EAPR,OAS6BR,qBAT7B,mBASNS,EATM,KASSC,EATT,OAUyBV,mBAAS,IAVlC,mBAUNW,EAVM,KAUOC,EAVP,KAYb,SAASC,EAASC,GAChB,GAAGA,EAAK,CACN,IAAIC,EAASD,EAAIE,QAAS,WAAY,MAEtC,OADkBD,EAAOE,OAAO,GAAGC,cAAgBH,EAAOI,MAAM,IAqEpE,OAhDAC,qBAAU,WACLX,GACDY,MAAM,yCAAyCZ,GAC9Ca,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,GACZb,EAAea,MAEhBG,OAAM,SAAAC,GACLH,QAAQC,IAAIE,QAGf,CAACpB,IAqCF,qBAAKqB,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,oBAAIC,MAAM,YAAV,4BAGExB,GACA,sBAAKuB,UAAU,mBAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,uBAAOE,KAAK,OAAOF,UAAU,eAAeG,MAAOhC,EAAOiC,GAAG,gBAAgBC,UAzEzF,SAAuBC,GACH,UAAdA,EAAMC,KACRhB,MAAM,qCAAqCpB,GAC1CqB,MAAK,SAAAC,GACJ,OAAOA,EAAIC,UAEZF,MAAK,SAAAG,GACJrB,EAAWqB,EAAStB,SACpBG,EAAemB,EAASa,iBAEzBV,OAAM,SAAAC,GACLH,QAAQC,IAAIE,OA8DiGU,SAAU,SAAAC,GAAC,OAAItC,EAASsC,EAAEC,OAAOR,QAAQS,WAAS,IACzJ,uBAAOC,MAAO,CAACC,MAAO,WAAYC,QAAQ,gBAA1C,8BAEF,uBA7CL1C,EAAQ2C,OAAS,EACX3C,EAAQ4C,KAAI,SAAChC,EAAQiC,GAC1B,OACE,sBAAKlB,UAAU,cAAf,UACE,oBAAGA,UAAU,kBAAkBmB,KAAK,IAApC,UACGlC,EAAOmC,OADV,IAEE,mBACED,KAAK,IACLnB,UAAU,aACVqB,QAAS,SAACX,GACRA,EAAEY,iBACF5C,GAAgB,GAChBE,EAAiBK,EAAOmC,SAN5B,SAQKrC,EAASE,EAAOsC,eAGtBtC,EAAOuC,aACN,sBAAMxB,UAAU,qBAAhB,SACE,cAAC,IAAD,CACEzB,YAAaA,EACbkD,gBAAe,aAAQxC,EAAOuC,YAAf,iBAQpB,mBAAGxB,UAAU,aAAb,4BAoBJvB,GAAgBI,EAAY0C,UAC3B,qCACE,mBAAGvB,UAAU,aAAamB,KAAK,IAAIE,QAAS,SAACX,GAC3CA,EAAEY,iBACF5C,GAAgB,IAFlB,kBAIA,6BACGG,EAAY0C,WAEf,qBAAKvB,UAAU,oBAAf,SACE,mBAAGa,MAAO,CAACa,UAAW,WAAtB,SACA,cAAC,IAAD,CACInD,YAAaA,EACbkD,gBAAiB5C,EAAY8C,aAMtClD,IAAiBI,EAAY0C,UAC5B,gDChHKK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtC,MAAK,YAAkD,IAA/CuC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3ec15a29.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Highlighter from 'react-highlight-words';\n\nfunction App() {\n\n  const [input, setInput] = useState();\n\n  const [results, setResults] = useState([]);\n  const [searchWords, setSearchWords] = useState([]);\n\n  const [showDocument, setShowDocument] = useState(false);\n\n  const [selectedDocId, setSelectedDocId] = useState();\n  const [selectedDoc, setSelectedDoc] = useState({});\n\n  function camelize(str) {\n    if(str) {\n      let result = str.replace( /([A-Z])/g, \"$1\" );\n      let finalResult = result.charAt(0).toUpperCase() + result.slice(1);\n      return finalResult;\n    }\n  }\n\n  function handleKeyDown(event) {\n    if (event.key === 'Enter') {\n      fetch('http://localhost:5000/query?query='+input)\n      .then(res => {\n        return res.json();\n      })\n      .then(res_json => {\n        setResults(res_json.results);\n        setSearchWords(res_json.search_words);\n      })\n      .catch(err => {\n        console.log(err);\n      })\n    }\n  }\n\n  useEffect(() => {\n    if(selectedDocId) {\n      fetch('http://localhost:5000/document?doc_id='+selectedDocId)\n      .then(res => res.json())\n      .then(res_json => {\n        console.log(res_json);\n        setSelectedDoc(res_json);\n      })\n      .catch(err => {\n        console.log(err);\n      })\n    }\n  }, [selectedDocId]);\n\n  function renderResults() {\n    if(results.length > 0) {\n      return results.map((result, i) => {\n        return (\n          <div className=\"result mb-4\">\n            <p className=\"lead text-white\" href=\"#\">\n              {result.doc_id}.\n              <a\n                href=\"#\" \n                className=\"text-white\" \n                onClick={(e) => {\n                  e.preventDefault()\n                  setShowDocument(true);\n                  setSelectedDocId(result.doc_id)\n                }}>\n                  {camelize(result.doc_name)}\n              </a>\n            </p>\n            {result.doc_snippet && (\n              <span className=\"snippet text-white\">\n                <Highlighter\n                  searchWords={searchWords}\n                  textToHighlight={`...${result.doc_snippet}...`}\n                />\n              </span>\n            )}\n          </div>\n        );\n      })\n    } else {\n      return <p className=\"text-white\">No results.</p>\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 class=\"display-4\">\n          Short Stories\n        </h1>\n        {!showDocument && (\n          <div className=\"col-lg-8 content\">\n            <div className=\"form-floating mb-3\">\n              <input type=\"text\" className=\"form-control\" value={input} id=\"floatingInput\" onKeyDown={handleKeyDown} onChange={e => setInput(e.target.value)} autoFocus />\n              <label style={{color: \"#282c34\"}} htmlFor=\"floatingInput\">query + enter</label>\n            </div>\n            <hr/>\n            {renderResults()}\n          </div>\n        )}\n        {showDocument && selectedDoc.doc_name && (\n          <>\n            <a className=\"text-white\" href=\"#\" onClick={(e) => {\n              e.preventDefault();\n              setShowDocument(false);\n            }}>Back</a>\n            <h3>\n              {selectedDoc.doc_name}  \n            </h3>\n            <div className=\"col-lg-10 content\">\n              <p style={{textAlign: \"justify\"}}>\n              <Highlighter\n                  searchWords={searchWords}\n                  textToHighlight={selectedDoc.doc}\n                />\n              </p>\n            </div>\n          </>\n        )}\n        {showDocument && !selectedDoc.doc_name && (\n          <p>Loading..</p>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}