{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","input","setInput","results","setResults","camelize","str","result","replace","charAt","toUpperCase","slice","className","type","id","onKeyDown","event","key","fetch","then","res","json","res_json","data","catch","err","console","log","onChange","e","target","value","autoFocus","htmlFor","length","map","i","doc_id","doc_name","doc_snippet","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLA+DeA,MA5Df,WAAgB,IAAD,EAEaC,qBAFb,mBAENC,EAFM,KAECC,EAFD,OAGiBF,mBAAS,IAH1B,mBAGNG,EAHM,KAGGC,EAHH,KAKb,SAASC,EAASC,GAChB,IAAIC,EAASD,EAAIE,QAAS,WAAY,MAEtC,OADkBD,EAAOE,OAAO,GAAGC,cAAgBH,EAAOI,MAAM,GAmClE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,+CAGA,sBAAKA,UAAU,mBAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,uBAAOC,KAAK,OAAOD,UAAU,eAAeE,GAAG,gBAAgBC,UAvCnD,SAACC,GACH,UAAdA,EAAMC,KACRC,MAAM,+BAA+BjB,GACpCkB,MAAK,SAAAC,GACJ,OAAOA,EAAIC,UAEZF,MAAK,SAAAG,GACJlB,EAAWkB,EAASC,SAErBC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,OA6BiFG,SAAU,SAAAC,GAAC,OAAI3B,EAAS2B,EAAEC,OAAOC,QAAQC,WAAS,IAC3I,uBAAOC,QAAQ,gBAAf,sBAxBL9B,EAAQ+B,OAAS,EACX/B,EAAQgC,KAAI,SAAC5B,EAAQ6B,GAE1B,OADAV,QAAQC,IAAIpB,GAEV,sBAAKK,UAAU,cAAf,UACE,oBAAGA,UAAU,kBAAb,UAAgCL,EAAO8B,OAAvC,KAAiDhC,EAASE,EAAO+B,aACjE,uBAAM1B,UAAU,qBAAhB,gBAAyCL,EAAOgC,YAAhD,eAKC,mBAAG3B,UAAU,aAAb,kCC7BE4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.2348d308.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n\n  const [input, setInput] = useState();\n  const [results, setResults] = useState([]);\n\n  function camelize(str) {\n    let result = str.replace( /([A-Z])/g, \"$1\" );\n    let finalResult = result.charAt(0).toUpperCase() + result.slice(1);\n    return finalResult;\n  }\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      fetch('http://localhost:5000?query='+input)\n      .then(res => {\n        return res.json();\n      })\n      .then(res_json => {\n        setResults(res_json.data);\n      })\n      .catch(err => {\n        console.log(err);\n      })\n    }\n  }\n\n  function renderResults() {\n    if(results.length > 0) {\n      return results.map((result, i) => {\n        console.log(result)\n        return (\n          <div className=\"result mb-4\">\n            <p className=\"lead text-white\">{result.doc_id}. {camelize(result.doc_name)}</p>\n            <span className=\"snippet text-white\">...{result.doc_snippet}...</span>\n          </div>\n        );\n      })\n    } else {\n      return <p className=\"text-white\">No results.</p>\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>\n          Short Stories\n        </h1>\n        <div className=\"col-lg-8 content\">\n          <div className=\"form-floating mb-3\">\n            <input type=\"text\" className=\"form-control\" id=\"floatingInput\" onKeyDown={handleKeyDown} onChange={e => setInput(e.target.value)} autoFocus />\n            <label htmlFor=\"floatingInput\">query</label>\n          </div>\n          {renderResults()}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}